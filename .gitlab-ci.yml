services:
  - name: docker:dind
    alias: docker

stages:
  - tests
  - pack
  - deploy

test_rma_frontend:
  image: registry.gitlab.com/castlecraft/docker-craft/node-latest-headless-chrome:latest
  stage: tests
  cache:
    key: "$CI_JOB_NAME-$CI_COMMIT_REF_SLUG"
    paths:
      - packages/rma-frontend/node_modules/
  only:
    changes:
      - packages/rma-frontend/**/*
    refs:
      - merge_requests
      - master
  before_script:
    - cd packages/rma-frontend
    - npm install
  script:
    # set env variable for test
    - export NODE_ENV=test
    # Check Code Quality
    - npm run lint
    - npm run format:check
    # Test backend unit tests
    - npm run test
    # Test backend e2e
    - npm run e2e
  tags:
    - docker

test_rma_mobile:
  image: registry.gitlab.com/castlecraft/docker-craft/node-latest-headless-chrome:latest
  stage: tests
  cache:
    key: "$CI_JOB_NAME-$CI_COMMIT_REF_SLUG"
    paths:
      - packages/rma-mobile/node_modules/
  only:
    changes:
      - packages/rma-mobile/**/*
    refs:
      - merge_requests
      - master
  before_script:
    - cd packages/rma-mobile
    - npm install
  script:
    # Check Code Quality
    - npm run lint
    - npm run format:check
    # set env variable for test
    - export NODE_ENV=test
    # Test frontend
    - export DISPLAY=:99
    - Xvfb :0 -ac -screen 0 1024x768x24 &
    - npm run test
    - npm run e2e
  tags:
    - docker

test_rma_server:
  image: node:latest
  stage: tests
  cache:
    key: "$CI_JOB_NAME-$CI_COMMIT_REF_SLUG"
    paths:
      - packages/rma-server/node_modules/
  only:
    changes:
      - packages/rma-server/**/*
    refs:
      - merge_requests
      - master
  before_script:
    - cd packages/rma-server
    - npm install
  script:
    # set env variable for test
    - export NODE_ENV=test
    # Check Code Quality
    - npm run lint
    - npm run format:check
    # Test backend unit tests
    - npm run test
    # Test backend e2e
    - npm run test:e2e
  tags:
    - docker

pack_rma_server:
  image: docker
  stage: pack
  only:
    refs:
      - master
    changes:
      - packages/rma-server/**/*
  before_script:
    - apk add git
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN registry.gitlab.com
  script:
    - export VERSION=$(git tag --list "rma-server@*" --sort=-version:refname | sed -n 1p | sed -e 's#.*@\(\)#\1#')
    - docker build --cache-from $CI_REGISTRY_IMAGE:latest -t rma-server packages/rma-server
    # - docker tag rma-server $CI_REGISTRY/$CI_PROJECT_NAMESPACE/excel-rma/rma-server:$VERSION
    - docker tag rma-server $CI_REGISTRY/$CI_PROJECT_NAMESPACE/excel-rma/rma-server:latest
    - docker push $CI_REGISTRY/$CI_PROJECT_NAMESPACE/excel-rma/rma-server

pack_rma_frontend:
  image: docker
  stage: pack
  only:
    refs:
      - master
    changes:
      - packages/rma-frontend/**/*
  before_script:
    - apk add git
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN registry.gitlab.com
  script:
    - export VERSION=$(git tag --list "rma-frontend@*" --sort=-version:refname | sed -n 1p | sed -e 's#.*@\(\)#\1#')
    - docker build --cache-from $CI_REGISTRY_IMAGE:latest -t rma-frontend packages/rma-frontend
    # - docker tag rma-frontend $CI_REGISTRY/$CI_PROJECT_NAMESPACE/excel-rma/rma-frontend:$VERSION
    - docker tag rma-frontend $CI_REGISTRY/$CI_PROJECT_NAMESPACE/excel-rma/rma-frontend:latest
    - docker push $CI_REGISTRY/$CI_PROJECT_NAMESPACE/excel-rma/rma-frontend

deploy_staging:
  image: dtzar/helm-kubectl:latest
  only:
    refs:
      - master
  stage: deploy
  variables:
    KUBECONFIG: /etc/deploy/config
  before_script:
    - mkdir -p /etc/deploy
    - echo ${kube_config} | base64 -d > ${KUBECONFIG}
    - kubectl config use-context staging
  script:
    - helm upgrade stg-rma -n staging helm-chart/rma-portal --reuse-values
